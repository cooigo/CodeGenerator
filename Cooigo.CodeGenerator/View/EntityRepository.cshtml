@* Generator: Template *@
@functions { public dynamic Model { get; set; } }@{
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");
}
namespace @(Model.RootNamespace)@(dotModule).Repository
{
    using MyRow = Entities.@(Model.ClassName);
    using Dapper;
    using Dapper.Contrib.Extensions;
    using System.Collections.Generic;
    using System.Data;
    using Entities;
    using System.Linq;

    public class @(Model.ClassName)Repository
    {

        public long Create(IUnitOfWork uow, SaveModel<MyRow> request)
        {
            return uow.Connection.Insert(request.Entity, transaction: uow.Transaction);
        }

        public bool Update(IUnitOfWork uow, SaveModel<MyRow> request)
        {
            return uow.Connection.Update(request.Entity, transaction: uow.Transaction);
        }

        public bool Delete(IUnitOfWork uow, DeleteModel<MyRow> request)
        {
            return uow.Connection.Delete(request.Entity, transaction: uow.Transaction);
        }

        public ListResponse<MyRow> List(IDbConnection connection, ListRequest request)
        {
            var model = connection.Query<MyRow>("select * from [@(Model.ClassName)] where " + request.Filter.ToString() + request.Sort.ToOrderByString(), request.Filter).ToList();
            return new ListResponse<MyRow>()
            {
                Entities = model,
            };
        }


    }
}