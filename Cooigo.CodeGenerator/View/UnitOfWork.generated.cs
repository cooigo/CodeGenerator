#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cooigo.CodeGenerator.Views
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public partial class UnitOfWork : RazorGenerator.Templating.RazorTemplateBase
    {
#line hidden

        #line 2 "..\..\View\UnitOfWork.cshtml"
 public dynamic Model { get; set; } 
        #line default
        #line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");



            
            #line 2 "..\..\View\UnitOfWork.cshtml"
                                                   
    var dotModule = Model.Module == null ? "" : ("." + Model.Module);
    var moduleDot = Model.Module == null ? "" : (Model.Module + ".");


            
            #line default
            #line hidden
WriteLiteral("namespace ");


            
            #line 6 "..\..\View\UnitOfWork.cshtml"
      Write(Model.RootNamespace);

            
            #line default
            #line hidden

            
            #line 6 "..\..\View\UnitOfWork.cshtml"
                            Write(dotModule);

            
            #line default
            #line hidden
WriteLiteral(".Repository\r\n{\r\n    using System;\r\n    using System.Data;\r\n\r\n    public interface" +
" IUnitOfWork\r\n    {\r\n        IDbConnection Connection { get; }\r\n        IDbTrans" +
"action Transaction { get; }\r\n        event Action OnCommit;\r\n        event Actio" +
"n OnRollback;\r\n    }\r\n    public class UnitOfWork : IDisposable, IUnitOfWork\r\n  " +
"  {\r\n        private IDbConnection _connection;\r\n        private IDbTransaction " +
"_transaction;\r\n        private Action _commit;\r\n        private Action _rollback" +
";\r\n\r\n        public UnitOfWork(IDbConnection connection)\r\n        {\r\n           " +
" if (connection == null)\r\n                throw new ArgumentNullException(\"conne" +
"ction\");\r\n\r\n            _connection = connection;\r\n            if (connection.St" +
"ate != ConnectionState.Open)\r\n            {\r\n                connection.Open();\r" +
"\n            }\r\n            _transaction = connection.BeginTransaction();\r\n     " +
"   }\r\n\r\n        public IDbConnection Connection\r\n        {\r\n            get { re" +
"turn _connection; }\r\n        }\r\n\r\n        public IDbTransaction Transaction\r\n   " +
"     {\r\n            get\r\n            {\r\n                return _transaction;\r\n  " +
"          }\r\n        }\r\n\r\n        public void Dispose()\r\n        {\r\n            " +
"if (_transaction != null)\r\n            {\r\n                _transaction.Dispose()" +
";\r\n                _transaction = null;\r\n\r\n                if (_rollback != null" +
")\r\n                {\r\n                    _rollback();\r\n                    _rol" +
"lback = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        public voi" +
"d Commit()\r\n        {\r\n            if (_transaction == null)\r\n                th" +
"row new ArgumentNullException(\"transaction\");\r\n\r\n            _transaction.Commit" +
"();\r\n            _transaction = null;\r\n\r\n            if (_commit != null)\r\n     " +
"       {\r\n                _commit();\r\n                _commit = null;\r\n         " +
"   }\r\n        }\r\n\r\n        public void Rollback()\r\n        {\r\n            if (_t" +
"ransaction == null)\r\n                throw new ArgumentNullException(\"transactio" +
"n\");\r\n\r\n            _transaction.Rollback();\r\n        }\r\n\r\n\r\n        public even" +
"t Action OnCommit\r\n        {\r\n            add { _commit += value; }\r\n           " +
" remove { _commit -= value; }\r\n        }\r\n\r\n        public event Action OnRollba" +
"ck\r\n        {\r\n            add { _rollback += value; }\r\n            remove { _ro" +
"llback -= value; }\r\n        }\r\n    }\r\n    \r\n}");


        }
    }
}
#pragma warning restore 1591
